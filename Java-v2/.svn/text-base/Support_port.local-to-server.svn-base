/***************************************************************************************     
 *   Support_port:  This servlet will port a text file containing member & handicap info
 *                  to the database tables.  The text file is generated by the GHIN system.
 *
 *
 *
 *  Copy member2b from local pc to server
 *
 *       ************* Change the club name !!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 *
 ***************************************************************************************
 */
    
import java.io.*;
import javax.servlet.*;
import javax.servlet.http.*;
import java.util.*;
import java.sql.*;


// foretees imports
import com.foretees.common.FeedBack;
import com.foretees.member.Member;
import com.foretees.member.MemberHelper;


public class Support_port extends HttpServlet {
                           
 String rev = SystemUtils.REVLEVEL;       // Software Revision Level (Version)

 
 public void doPost(HttpServletRequest req, HttpServletResponse resp)
         throws ServletException, IOException {
           
   resp.setContentType("text/html");
   PrintWriter out = resp.getWriter();
        
   Connection con = null;                 // init DB objects
   Connection con2 = null;              
   Statement stmt = null;
   PreparedStatement pstmt = null;
   PreparedStatement pstmt2 = null;
   ResultSet rs = null;
     
   HttpSession session = null; 

   //
   // Make sure user didn't enter illegally
   //
   session = req.getSession(false);  // Get user's session object (no new one)

   if (session == null) {

      invalidUser(out);            // Intruder - reject
      return;
   }

   String support = "support";

   String user = (String)session.getAttribute("user");   // get username

   if (!user.equals( support )) {

      invalidUser(out);            // Intruder - reject
      return;
   }

   //
   // Load the JDBC Driver and connect to DB
   //
   String club = "demov4";            // get club name  ***************CHANGE************
   String club2 = "demotom";          // get club name  ***************CHANGE************

   try {
      con = dbConn.Connect(club);       // connect to Local db

      con2 = dbConn2.Connect(club2);     // connect to Server db

   }
   catch (Exception exc) {

      // Error connecting to db....

      out.println("<HTML><HEAD><TITLE>DB Connection Error Received</TITLE></HEAD>");
      out.println("<BODY><CENTER><H3>DB Connection Error</H3>");
      out.println("<BR><BR>Unable to connect to the DB.");
      out.println("<BR>Exception: "+ exc.getMessage());
      out.println("<BR><BR> <A HREF=\"/" +rev+ "/support_main.htm\">Return</A>.");
      out.println("</CENTER></BODY></HTML>");
      return;
   }

   Member member = new Member();

   String line = "";
   String name = "";
   String fname = "";
   String lname = "";
   String mi = "";
   String sex = "";
   String ghin = "";         // GHIN number
   String mem_id = "";       // user name - 'local number' on ghin system
   String mNum = "";         // member # derived from local number
   String holes = "";        // 9 or 18
   String u_hndcp = "";
   String c_hndcp = "";
   String password = "";
   String mship = "";    
   String mtype = "";
   String status = "";
   String phone = "";
   String phone2 = "";
   String bag = "";
   String posid = "";
   String email = "";      
   String email2 = "";
   String wc = "";         
   String temp = "Golf";
   String dep = "";
   String ind = "";
   String prefix = "";
   String message = "";
   String locker = "";
   String msub = "";
   String name_pre = "";
   String name_suf = "";
   String webid = "";
   float course = 0;
   float usga = 0;
   float u_hcap = 0;           // usga hndcp
   float c_hcap = 0;          // course hndcp
   int count = 0;
   int i = 0;
   int emailOpt = 0;
   int birth = 0;
   int mm = 0;
   int dd = 0;
   int yy = 0;
   int length = 0;
   int dup = 0;
   boolean replace = false;


   try {

      pstmt = con.prepareStatement (
               "SELECT * FROM member2b");             // get members from LOCAL db (con)

      pstmt.clearParameters();        
      rs = pstmt.executeQuery();      

      while (rs.next()) {

         mem_id = rs.getString(1);
         password = rs.getString(2);
         lname = rs.getString(3);
         fname = rs.getString(4);
         mi = rs.getString(5);
         mship = rs.getString(6);
         mtype = rs.getString(7);
         email = rs.getString(8);
         count = rs.getInt(9);
         c_hcap = rs.getFloat(10);
         u_hcap = rs.getFloat(11);
         wc = rs.getString(12);
         message = rs.getString(13);
         emailOpt = rs.getInt(14);
         mNum = rs.getString(15);
         ghin = rs.getString(16);
         locker = rs.getString(17);
         bag = rs.getString(18);
         birth = rs.getInt(19);
         posid = rs.getString(20);
         msub = rs.getString(21);
         email2 = rs.getString(22);
         phone = rs.getString(23);
         phone2 = rs.getString(24);
         name_pre = rs.getString(25);
         name_suf = rs.getString(26);
         webid = rs.getString(27);

         //
         //    add member to SERVER db (con2)   ******************
         //
         pstmt2 = con2.prepareStatement (
            "INSERT INTO member2b (username, password, name_last, name_first, name_mi, " +
            "m_ship, m_type, email, count, c_hancap, g_hancap, wc, message, emailOpt, memNum, " +
            "ghin, locker, bag, birth, posid, msub_type, email2, phone1, phone2, name_pre, name_suf, webid) " +
            "VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");

         pstmt2.clearParameters();        // clear the parms
         pstmt2.setString(1, mem_id);        // put the parm in stmt
         pstmt2.setString(2, password);
         pstmt2.setString(3, lname);
         pstmt2.setString(4, fname);
         pstmt2.setString(5, mi);
         pstmt2.setString(6, mship);
         pstmt2.setString(7, mtype);
         pstmt2.setString(8, email);
         pstmt2.setInt(9, count);
         pstmt2.setFloat(10, c_hcap);
         pstmt2.setFloat(11, u_hcap);
         pstmt2.setString(12, wc);
         pstmt2.setString(13, message);
         pstmt2.setInt(14, emailOpt);
         pstmt2.setString(15, mNum);
         pstmt2.setString(16, ghin);
         pstmt2.setString(17, locker);
         pstmt2.setString(18, bag);
         pstmt2.setInt(19, birth);
         pstmt2.setString(20, posid);
         pstmt2.setString(21, msub);
         pstmt2.setString(22, email2);
         pstmt2.setString(23, phone);
         pstmt2.setString(24, phone2);
         pstmt2.setString(25, name_pre);
         pstmt2.setString(26, name_suf);
         pstmt2.setString(27, webid);
         pstmt2.executeUpdate();          // execute the prepared stmt

         pstmt2.close();              // close the stmt

      }   // end of while

      pstmt.close();              // close the stmt

   }
   catch (Exception e3) {

      out.println("<HTML><HEAD><TITLE>Text File Port Failed</TITLE></HEAD>");
      out.println("<BODY><CENTER><H3>Text File Conversion Failed</H3>");
      out.println("<BR><BR>DB Add or Update Failed for  " + club);
      out.println("<BR><BR>Exception Received: "+ e3.getMessage());
      out.println("<BR><BR> <A HREF=\"/" +rev+ "/support_main.htm\">Return</A>");
      out.println("</CENTER></BODY></HTML>");
      return;
   }


   out.println("<HTML><HEAD><TITLE>Text File Ported to DB</TITLE></HEAD>");
   out.println("<BODY><CENTER><H3>Text File Conversion Complete</H3>");
   out.println("<BR><BR>The GHIN Text File has Been Converted.");
   out.println("<BR><BR> <A HREF=\"/" +rev+ "/support_main.htm\">Return</A>");
   out.println("</CENTER></BODY></HTML>");
 }   
                                 

 //************************************************************************
 //  logError - logs error messages to a text file in the club's folder
 //************************************************************************

 private void logError(String msg, String club) {

   String space = "  ";
   int fail = 0;

   try {
      //
      //  Dir path for the real server
      //
      PrintWriter fout1 = new PrintWriter(new FileWriter("//usr//local//tomcat//webapps//" +club+ "//error.txt", true));

      //
      //  Put header line in text file
      //
      fout1.print(new java.util.Date() + space + msg);
      fout1.println();      // output the line

      fout1.close();

   }
   catch (Exception e2) {

      fail = 1;
   }

   //
   //  if above failed, try local pc
   //
   if (fail != 0) {

      try {
         //
         //  dir path for test pc
         //
         PrintWriter fout = new PrintWriter(new FileWriter("c:\\java\\tomcat\\webapps\\" +club+ "\\error.txt", true));

         //
         //  Put header line in text file
         //
         fout.print(new java.util.Date() + space + msg);
         fout.println();      // output the line

         fout.close();
      }
      catch (Exception ignore) {
      }
   }
 }  // end of logError


 // *********************************************************
 // Illegal access by user - force user to login....
 // *********************************************************

 private void invalidUser(PrintWriter out) {

   out.println(SystemUtils.HeadTitle("Access Error - Redirect"));
   out.println("<BODY><CENTER><img src=\"/" +rev+ "/images/foretees.gif\"><BR>");
   out.println("<hr width=\"40%\">");
   out.println("<BR><H2>Access Error</H2><BR>");
   out.println("<BR><BR>Sorry, you must login before attempting to access these features.<BR>");
   out.println("<BR><BR> <A HREF=\"/" +rev+ "/support_main.htm\">Return</A>");
   out.println("</CENTER></BODY></HTML>");

 }


 // *********************************************************
 // Database Error
 // *********************************************************

 private void dbError(PrintWriter out, Exception e) {

   out.println(SystemUtils.HeadTitle("Database Error"));
   out.println("<BODY><CENTER>");
   out.println("<BR><BR><H3>Database Access Error</H3>");
   out.println("<BR><BR>Sorry, we are unable to access the database at this time.");
   out.println("<BR><BR>" + e.getMessage());
   out.println("<BR><BR><a href=\"/" +rev+ "/support_main.htm\">Return</a>");
   out.println("</CENTER></BODY></HTML>");

 }

}
